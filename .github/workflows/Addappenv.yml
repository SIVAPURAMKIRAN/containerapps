name: addenvironment

on:
  push:
    branches: [ "environmentcreate" ]
  

jobs:
  build:

    runs-on: ubuntu-latest
    continue-on-error: false
    env:
        rootempfoldername: ${{ vars.rootempfoldername }}
    container: 
      image: kirankumarsivapuram/base_image:3.0             

    steps:
    - uses: actions/checkout@v3           
    - name: az login
      run: |
        az login --service-principal -u ${{secrets.user1}} -p ${{secrets.password1}} -t ${{secrets.azure_tenent_id}} 
        echo  ${{ vars.rootempfoldername }}
    
    - name: set subscription
      run: az account set --subscription ${{secrets.azure_subscription_id}}    
    - name: create container environment
      shell: pwsh
      run: |
        [int]$MinReplica = 0
        [int]$MaxReplica = 30
        $ContainerRegistry = "${{ vars.acrname }}"
        $RegistryPassword = "${{ secrets.REGISTRYPASSWORD }}"
        $Imageurl = "${{ vars.IMAGEURL }}"
        write-output "image url is : $Imageurl"
        $Imageurl2=${{ vars.IMAGEURL }}
        write-output "image2 url is : $Imageurl2"
        $ResourceGroupname = "${{ vars.CONTAINERAPPRGNAME }}"
        $EnvironmentName="${{ vars.CONTAINERAPPENVNAME }}"
        $Ingresstype = "${{ vars.ingress }}"
        $Ingressport = "${{ vars.ingressport }}"
        $Registryserver = "$ContainerRegistry.azurecr.io"
        write-output "acr url is : $Registryserver"
        $Appcpu = "${{ vars.appcpu }}"
        $Appmemory = "${{ vars.appmemory }}"
        
        
        az containerapp create -n $ContainerRegistry -g $ResourceGroupname --image ${{ vars.IMAGEURL }} --environment $EnvironmentName --ingress $Ingresstype --target-port $Ingressport --registry-server $Registryserver --registry-username $ContainerRegistry --registry-password $RegistryPassword --query properties.configuration.ingress.fqdn --cpu $appcpu --memory $Appmemory --min-replicas $MinReplica --max-replicas $MaxReplica --scale-rule-name azure-http-rule --scale-rule-type http --scale-rule-http-concurrency 20
